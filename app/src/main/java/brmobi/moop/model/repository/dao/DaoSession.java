package brmobi.moop.model.repository.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import brmobi.moop.features.service.Image;
import brmobi.moop.model.entities.Condominio;
import brmobi.moop.model.entities.User;
import brmobi.moop.model.entities.Usuario;

import brmobi.moop.model.repository.dao.ImageDao;
import brmobi.moop.model.repository.dao.CondominioDao;
import brmobi.moop.model.repository.dao.UserDao;
import brmobi.moop.model.repository.dao.UsuarioDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig imageDaoConfig;
    private final DaoConfig condominioDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig usuarioDaoConfig;

    private final ImageDao imageDao;
    private final CondominioDao condominioDao;
    private final UserDao userDao;
    private final UsuarioDao usuarioDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        condominioDaoConfig = daoConfigMap.get(CondominioDao.class).clone();
        condominioDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        usuarioDaoConfig = daoConfigMap.get(UsuarioDao.class).clone();
        usuarioDaoConfig.initIdentityScope(type);

        imageDao = new ImageDao(imageDaoConfig, this);
        condominioDao = new CondominioDao(condominioDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        usuarioDao = new UsuarioDao(usuarioDaoConfig, this);

        registerDao(Image.class, imageDao);
        registerDao(Condominio.class, condominioDao);
        registerDao(User.class, userDao);
        registerDao(Usuario.class, usuarioDao);
    }
    
    public void clear() {
        imageDaoConfig.clearIdentityScope();
        condominioDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        usuarioDaoConfig.clearIdentityScope();
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

    public CondominioDao getCondominioDao() {
        return condominioDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UsuarioDao getUsuarioDao() {
        return usuarioDao;
    }

}
